* ORG-NOTER (fork of a fork)
** This is a fork of the *c1-g* fork with some commits picked from *dmitrym*
   - In essence, this is close to the original *weirdNox* (Gon√ßalo Santos)
     version that you find on MELPA with the refactoring that *c1-g* implemented

   - djvu and epub support have also been advanced by *c1-g*, but I have not
     tested any of that code.

   - The main new feature for PDF users is 2-D precise notes, which can be
     inserted in two ways:
     1. "Select-precise": selecting text in the pdf, followed by =M-i=.  *c1-g*
        changed the position format to use the entire list returned by =edges=.
        This breaks the other way of inserting precise notes.  On *dmitrym*'s
        fork, select-precise notes auto-fill the note title with the selected
        text.  This has deleterious side effects for other note insertion methods.
     2. "Click-precise": =M-i=, followed by clicking a location on the page.

   - Standard notes can also be inserted in two ways:
     1. "TAB".  Hitting tab creates a note title "Notes for page ##", where the
        page number is inserted automatically over the octothorpes.
     2. "i".  The fundamental =org-noter-insert-note=.  User types note title
        into the minibuffer.
** Note insertion desired features
   1. The position of the precise note should be at the click (with a
      configurable horizontal offset) or at the upper-left of the selected text
      (or configurable to one of the corners or ends of the selected area).
   2. Highlighting of selected text should be a user settable configuration option
   3. For any of the note insertion methods, if there is any selected text, then
      it should be the default title.  (or there should be a configurable
      switch)
   4. Add property and/or configuration to make the arrow left or right
      pointing.

** Bugs to fix
   1. Sometimes (when?) M-p doesn't pick up the containing note-at-point right
      away (or at all), requiring user to manually type in the (existing) title

** Trying out the refactor of org-noter-insert-note
   1. load `org-noter-dev.el'
      - defines org-noter-max-short-note
      - defines replacement for note insertion commands
      - sets default note insertion keybindings to the new commands
   2. Guiding principles for this refactor
      - The preferred title is the one the user enters in the minibuffer.
      - Selected text should be used in the note, either as the title or in the body
      - If there is no title input and no selected text, then use the default title
      - Refrain from making notes in the same location with the same title
      - Precise notes generally have different locations, so always make new
        precise notes
   3. Caveats
      - There may be cleaner ways to implement some of the logical tests, namely
        empty string vs. nil situations.
      - Not all combinations of text selection, entry command and note title
        have been tested.

** Stock vs refactored note insertion
   - more consistent use of selected text in title or body
   - more consistent primary default title (short-selected-text)
   - more consistent secondary default title ("Notes for page <location>")
   - avoids having different notes with the same heading

     In Stock org-noter, repeated TAB's give multiple notes.  In this refactor,
     new notes in the same location with the same title are note made.  For now,
     precise notes are excepted from this rule.

   - long quotes are enclosed in #+BEGIN_QUOTE...#+END_QUOTE
   - short quotes are enclosed in ``...'' (LaTeX style)
   - short/long are differentiated by customizable variable (default 80 char)

     In Stock org-noter, long selections have more than 3 lines.

*** Stock
   |                 | insert-note =i=                | precise note =M-i=        | no-questions =C-i, TAB= |
   |-----------------+--------------------------------+---------------------------+-------------------------|
   | title prompt?   | Y                              | Y                         | N                       |
   | default title 1 | prior note by location         | selected-text             | N/A                     |
   | default title 2 | "Notes for page #"             | "Notes for page # x y"    | "Notes for page #"      |
   | new note        | with new title                 | never                     | never                   |
   | body            | selected-text on existing note | selected-text (> 3 lines) | none                    |
   |-----------------+--------------------------------+---------------------------+-------------------------|

*** Refactored
   |                 | insert-note =i=           | precise note =M-i=     | no-questions =C-i, TAB=   |
   |-----------------+---------------------------+------------------------+---------------------------|
   | title prompt?   | Y                         | Y                      | N                         |
   | default title 1 | short-selected-text       | short-selected-text    | short-selected-text       |
   | default title 2 | "Notes for page #"        | "Notes for page # x y" | "Notes for page #"        |
   | new note        | with new title            | never                  | with new title            |
   | body            | selected-text (not title) | long selected-text     | selected-text (not title) |
   |-----------------+---------------------------+------------------------+---------------------------|
** Features wishlist
   1. Use pdf-view-current-pagelabel to use the page label instead of page in
      default titles

      May require altering the org-noter-X--pretty-print-location-hook(s).

   2. Profile org-noter -- runs slow on large books (500+ pages)

   3. Bind M-<mouse-1> to precise-note, no-questions.

   4. Make background of arrow transparent (see org-noter--show-arrow)

   5. Handle 2-column pdfs with notes in read-order.

      Need to define a document property TWO-COLUMN and reference it.  Maybe
      make page a real number with #.0 for the left column and #.5 for the right
      column?

   6. Dedicated insert-selected-text-into-page-note
** Deltas w/ dmitrym
*** *-get-buffer-file-name-*
    My arglist: =(mode)=
    Dmitry's arglist: =(&optional major-mode)=

    P: =major-mode= is a native elisp function, =mode= is a better name
    D: the arg is not used, so the =&optional= is appropriate

    proposal: =(&optional mode)=
*** *-get-precise-info-*
    My arglist: =(major-mode window)=
    D's arglist: =(major-mode)=

    P: calling function already calls =org-noter--get-doc-window=
    P: =window= is used in all document modes

    proposal: change =major-mode= to =mode=, pass in =window=
*** *-goto-location*
    Mine uses =window= as the 3rd arg to ...-hook;
    Dmitry's calls =org-noter--get-doc-window= in ...pdf...-hook

    P: calling function already calls =org-noter--get-doc-window=
    D: nov and djvu don't need the =window= argument

    proposal: we discuss this one
*** *-check-location-property-*
    P: t (short circuit)
    D: (equal 5 (length (read property))))

    location can be
    1. page
    2. page v-pos
    3. page v-pos . h-pos

    neither function works properly.  need to read the calling function to
    determine course of action..
*** *doc--get-precise-info-*
    I need to read this one.
*** -get-buffer-file-name-hook
    P: nil
    D: =(...nov ...pdf)

    should be nil in org-noter-core and set in modules.
*** --doc-approx-location-hook
    D: references 5-element location

    docstring needs to be update on D's side.
*** --note-search-no-recurse
    P: called in org-noter--get-view-info by org-element-map
    D: missing

    these are equivalent
#+begin_src diff
-           nil nil (delete 'headline (append org-element-all-elements nil))))
+         nil nil org-noter--note-search-no-recurse)
#+end_src

    but this is used by org-noter--map-ignore-headings-with-doc-file, which is
    used by all of the sync functions

    probably should keep it, and since we keepit, use it in org-noter--get-view-info
*** org-noter--create-session
    P: =org-link-bracket-re=
    D: =org-bracket-link-regexp= (obsolete)

    keep mine.
*** (defun org-noter--narrow-to-root (ast)
    Dmitry: red
    Mine  : green
#+begin_src diff
-  (when ast
+  (when (and ast (not (org-noter--no-heading-p)))
     (save-excursion
       (goto-char (org-element-property :contents-begin ast))
       (org-show-entry)
-      (when (org-at-heading-p) (org-narrow-to-subtree))
+      (org-narrow-to-subtree)
       (org-cycle-hide-drawers 'all))))
#+end_src
***  (defun org-noter--get-location-page (location)
   #+begin_src diff
   "Get the page number given a LOCATION of form (page top . left) or (page . top)."
-  (message "===> %s" location)
-  (if (listp location)
-      (car location)
-      location))
+  (car location))
   #+end_src

** precise note fix
*** *pdf--get-precise-info-*
    P: fixed calculation of precise location
    D: legacy code

    keep mine.
*** org-noter--conv-page-scroll-percentage
    diffs are part of my precise-note fix.
** highlighting
   my solution is compact, but too pdf-specific.
